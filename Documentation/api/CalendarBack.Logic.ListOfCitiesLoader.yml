### YamlMime:ManagedReference
items:
- uid: CalendarBack.Logic.ListOfCitiesLoader
  commentId: T:CalendarBack.Logic.ListOfCitiesLoader
  id: ListOfCitiesLoader
  parent: CalendarBack.Logic
  children:
  - CalendarBack.Logic.ListOfCitiesLoader.dataLocation
  - CalendarBack.Logic.ListOfCitiesLoader.getCities
  langs:
  - csharp
  - vb
  name: ListOfCitiesLoader
  nameWithType: ListOfCitiesLoader
  fullName: CalendarBack.Logic.ListOfCitiesLoader
  type: Class
  source:
    remote:
      path: CalendarBack/Logic/ListOfCitiesLoader.cs
      branch: master
      repo: https://github.com/solko12/Calendar.git
    id: ListOfCitiesLoader
    path: Logic/ListOfCitiesLoader.cs
    startLine: 12
  assemblies:
  - CalendarBack
  namespace: CalendarBack.Logic
  summary: "\nClass loads cities list and parse it;\n"
  example: []
  syntax:
    content: public static class ListOfCitiesLoader
    content.vb: Public Module ListOfCitiesLoader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CalendarBack.Logic.ListOfCitiesLoader.dataLocation
  commentId: P:CalendarBack.Logic.ListOfCitiesLoader.dataLocation
  id: dataLocation
  parent: CalendarBack.Logic.ListOfCitiesLoader
  langs:
  - csharp
  - vb
  name: dataLocation
  nameWithType: ListOfCitiesLoader.dataLocation
  fullName: CalendarBack.Logic.ListOfCitiesLoader.dataLocation
  type: Property
  source:
    remote:
      path: CalendarBack/Logic/ListOfCitiesLoader.cs
      branch: master
      repo: https://github.com/solko12/Calendar.git
    id: dataLocation
    path: Logic/ListOfCitiesLoader.cs
    startLine: 17
  assemblies:
  - CalendarBack
  namespace: CalendarBack.Logic
  summary: "\nLocation for json list of cities data\n"
  example: []
  syntax:
    content: public static string dataLocation { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared Property dataLocation As String
  overload: CalendarBack.Logic.ListOfCitiesLoader.dataLocation*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: CalendarBack.Logic.ListOfCitiesLoader.getCities
  commentId: M:CalendarBack.Logic.ListOfCitiesLoader.getCities
  id: getCities
  parent: CalendarBack.Logic.ListOfCitiesLoader
  langs:
  - csharp
  - vb
  name: getCities()
  nameWithType: ListOfCitiesLoader.getCities()
  fullName: CalendarBack.Logic.ListOfCitiesLoader.getCities()
  type: Method
  source:
    remote:
      path: CalendarBack/Logic/ListOfCitiesLoader.cs
      branch: master
      repo: https://github.com/solko12/Calendar.git
    id: getCities
    path: Logic/ListOfCitiesLoader.cs
    startLine: 22
  assemblies:
  - CalendarBack
  namespace: CalendarBack.Logic
  summary: "\nMethod loads and parse citiesList entity\n"
  example: []
  syntax:
    content: public static List<SingleCity> getCities()
    return:
      type: System.Collections.Generic.List{CalendarBack.Entities.SingleCity}
      description: ''
    content.vb: Public Shared Function getCities As List(Of SingleCity)
  overload: CalendarBack.Logic.ListOfCitiesLoader.getCities*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CalendarBack.Logic
  commentId: N:CalendarBack.Logic
  name: CalendarBack.Logic
  nameWithType: CalendarBack.Logic
  fullName: CalendarBack.Logic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CalendarBack.Logic.ListOfCitiesLoader.dataLocation*
  commentId: Overload:CalendarBack.Logic.ListOfCitiesLoader.dataLocation
  name: dataLocation
  nameWithType: ListOfCitiesLoader.dataLocation
  fullName: CalendarBack.Logic.ListOfCitiesLoader.dataLocation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CalendarBack.Logic.ListOfCitiesLoader.getCities*
  commentId: Overload:CalendarBack.Logic.ListOfCitiesLoader.getCities
  name: getCities
  nameWithType: ListOfCitiesLoader.getCities
  fullName: CalendarBack.Logic.ListOfCitiesLoader.getCities
- uid: System.Collections.Generic.List{CalendarBack.Entities.SingleCity}
  commentId: T:System.Collections.Generic.List{CalendarBack.Entities.SingleCity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SingleCity>
  nameWithType: List<SingleCity>
  fullName: System.Collections.Generic.List<CalendarBack.Entities.SingleCity>
  nameWithType.vb: List(Of SingleCity)
  fullName.vb: System.Collections.Generic.List(Of CalendarBack.Entities.SingleCity)
  name.vb: List(Of SingleCity)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CalendarBack.Entities.SingleCity
    name: SingleCity
    nameWithType: SingleCity
    fullName: CalendarBack.Entities.SingleCity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CalendarBack.Entities.SingleCity
    name: SingleCity
    nameWithType: SingleCity
    fullName: CalendarBack.Entities.SingleCity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
