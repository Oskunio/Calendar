### YamlMime:ManagedReference
items:
- uid: CalendarApp.CalendarAppTests.CalendarPageTests
  commentId: T:CalendarApp.CalendarAppTests.CalendarPageTests
  id: CalendarPageTests
  parent: CalendarApp.CalendarAppTests
  children:
  - CalendarApp.CalendarAppTests.CalendarPageTests.DoesItReturnsOneSevenNumerationDayOfTheWeek(System.Int32,System.Int32,System.Int32,System.Int32)
  - CalendarApp.CalendarAppTests.CalendarPageTests.TestingSetDayToBeginOfTheMonth(System.Int32,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: CalendarPageTests
  nameWithType: CalendarPageTests
  fullName: CalendarApp.CalendarAppTests.CalendarPageTests
  type: Class
  source:
    remote:
      path: Calendar/CalendarAppTests/CalendarPageTests.cs
      branch: master
      repo: https://github.com/solko12/Calendar
    id: CalendarPageTests
    path: ../Calendar/CalendarAppTests/CalendarPageTests.cs
    startLine: 9
  assemblies:
  - CalendarApp
  namespace: CalendarApp.CalendarAppTests
  summary: "\nThis class consist of unit tests for CalendarPageLogic.cs\n"
  example: []
  syntax:
    content: public class CalendarPageTests
    content.vb: Public Class CalendarPageTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CalendarApp.CalendarAppTests.CalendarPageTests.DoesItReturnsOneSevenNumerationDayOfTheWeek(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:CalendarApp.CalendarAppTests.CalendarPageTests.DoesItReturnsOneSevenNumerationDayOfTheWeek(System.Int32,System.Int32,System.Int32,System.Int32)
  id: DoesItReturnsOneSevenNumerationDayOfTheWeek(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: CalendarApp.CalendarAppTests.CalendarPageTests
  langs:
  - csharp
  - vb
  name: DoesItReturnsOneSevenNumerationDayOfTheWeek(Int32, Int32, Int32, Int32)
  nameWithType: CalendarPageTests.DoesItReturnsOneSevenNumerationDayOfTheWeek(Int32, Int32, Int32, Int32)
  fullName: CalendarApp.CalendarAppTests.CalendarPageTests.DoesItReturnsOneSevenNumerationDayOfTheWeek(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Calendar/CalendarAppTests/CalendarPageTests.cs
      branch: master
      repo: https://github.com/solko12/Calendar
    id: DoesItReturnsOneSevenNumerationDayOfTheWeek
    path: ../Calendar/CalendarAppTests/CalendarPageTests.cs
    startLine: 18
  assemblies:
  - CalendarApp
  namespace: CalendarApp.CalendarAppTests
  summary: "\nThis method check if the method DayOfWeekNumeration works correctly. It checks the index of sunday and monday.\n"
  example: []
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{2020, 4, 5, 7})]

      [InlineData(new object[]{2020, 4, 6, 1})]

      public void DoesItReturnsOneSevenNumerationDayOfTheWeek(int year, int month, int day, int expected)
    parameters:
    - id: year
      type: System.Int32
      description: ''
    - id: month
      type: System.Int32
      description: ''
    - id: day
      type: System.Int32
      description: ''
    - id: expected
      type: System.Int32
      description: ''
    content.vb: >-
      <Theory>

      <InlineData(New Object() {2020, 4, 5, 7})>

      <InlineData(New Object() {2020, 4, 6, 1})>

      Public Sub DoesItReturnsOneSevenNumerationDayOfTheWeek(year As Integer, month As Integer, day As Integer, expected As Integer)
  overload: CalendarApp.CalendarAppTests.CalendarPageTests.DoesItReturnsOneSevenNumerationDayOfTheWeek*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CalendarApp.CalendarAppTests.CalendarPageTests.TestingSetDayToBeginOfTheMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:CalendarApp.CalendarAppTests.CalendarPageTests.TestingSetDayToBeginOfTheMonth(System.Int32,System.Int32,System.Int32)
  id: TestingSetDayToBeginOfTheMonth(System.Int32,System.Int32,System.Int32)
  parent: CalendarApp.CalendarAppTests.CalendarPageTests
  langs:
  - csharp
  - vb
  name: TestingSetDayToBeginOfTheMonth(Int32, Int32, Int32)
  nameWithType: CalendarPageTests.TestingSetDayToBeginOfTheMonth(Int32, Int32, Int32)
  fullName: CalendarApp.CalendarAppTests.CalendarPageTests.TestingSetDayToBeginOfTheMonth(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Calendar/CalendarAppTests/CalendarPageTests.cs
      branch: master
      repo: https://github.com/solko12/Calendar
    id: TestingSetDayToBeginOfTheMonth
    path: ../Calendar/CalendarAppTests/CalendarPageTests.cs
    startLine: 33
  assemblies:
  - CalendarApp
  namespace: CalendarApp.CalendarAppTests
  summary: "\nThis method checks if SetBeginOfTheMonth method works correctly\n"
  example: []
  syntax:
    content: >-
      [Theory]

      [InlineData(new object[]{2020, 4, 7})]

      public void TestingSetDayToBeginOfTheMonth(int year, int month, int day)
    parameters:
    - id: year
      type: System.Int32
      description: ''
    - id: month
      type: System.Int32
      description: ''
    - id: day
      type: System.Int32
      description: ''
    content.vb: >-
      <Theory>

      <InlineData(New Object() {2020, 4, 7})>

      Public Sub TestingSetDayToBeginOfTheMonth(year As Integer, month As Integer, day As Integer)
  overload: CalendarApp.CalendarAppTests.CalendarPageTests.TestingSetDayToBeginOfTheMonth*
  attributes:
  - type: Xunit.TheoryAttribute
    ctor: Xunit.TheoryAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CalendarApp.CalendarAppTests
  commentId: N:CalendarApp.CalendarAppTests
  name: CalendarApp.CalendarAppTests
  nameWithType: CalendarApp.CalendarAppTests
  fullName: CalendarApp.CalendarAppTests
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CalendarApp.CalendarAppTests.CalendarPageTests.DoesItReturnsOneSevenNumerationDayOfTheWeek*
  commentId: Overload:CalendarApp.CalendarAppTests.CalendarPageTests.DoesItReturnsOneSevenNumerationDayOfTheWeek
  name: DoesItReturnsOneSevenNumerationDayOfTheWeek
  nameWithType: CalendarPageTests.DoesItReturnsOneSevenNumerationDayOfTheWeek
  fullName: CalendarApp.CalendarAppTests.CalendarPageTests.DoesItReturnsOneSevenNumerationDayOfTheWeek
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CalendarApp.CalendarAppTests.CalendarPageTests.TestingSetDayToBeginOfTheMonth*
  commentId: Overload:CalendarApp.CalendarAppTests.CalendarPageTests.TestingSetDayToBeginOfTheMonth
  name: TestingSetDayToBeginOfTheMonth
  nameWithType: CalendarPageTests.TestingSetDayToBeginOfTheMonth
  fullName: CalendarApp.CalendarAppTests.CalendarPageTests.TestingSetDayToBeginOfTheMonth
