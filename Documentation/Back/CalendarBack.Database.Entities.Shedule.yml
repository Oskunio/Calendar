### YamlMime:ManagedReference
items:
- uid: CalendarBack.Database.Entities.Shedule
  commentId: T:CalendarBack.Database.Entities.Shedule
  id: Shedule
  parent: CalendarBack.Database.Entities
  children:
  - CalendarBack.Database.Entities.Shedule.Date
  - CalendarBack.Database.Entities.Shedule.Id
  - CalendarBack.Database.Entities.Shedule.TasksList
  langs:
  - csharp
  - vb
  name: Shedule
  nameWithType: Shedule
  fullName: CalendarBack.Database.Entities.Shedule
  type: Class
  source:
    remote:
      path: CalendarBack/Database/Entities/Shedule.cs
      branch: master
      repo: https://github.com/solko12/Calendar
    id: Shedule
    path: Database/Entities/Shedule.cs
    startLine: 10
  assemblies:
  - CalendarBack
  namespace: CalendarBack.Database.Entities
  summary: "\nShedule entity\n"
  example: []
  syntax:
    content: public class Shedule
    content.vb: Public Class Shedule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CalendarBack.Database.Entities.Shedule.Id
  commentId: P:CalendarBack.Database.Entities.Shedule.Id
  id: Id
  parent: CalendarBack.Database.Entities.Shedule
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Shedule.Id
  fullName: CalendarBack.Database.Entities.Shedule.Id
  type: Property
  source:
    remote:
      path: CalendarBack/Database/Entities/Shedule.cs
      branch: master
      repo: https://github.com/solko12/Calendar
    id: Id
    path: Database/Entities/Shedule.cs
    startLine: 15
  assemblies:
  - CalendarBack
  namespace: CalendarBack.Database.Entities
  summary: "\nId of the shedule\n"
  example: []
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: CalendarBack.Database.Entities.Shedule.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CalendarBack.Database.Entities.Shedule.Date
  commentId: P:CalendarBack.Database.Entities.Shedule.Date
  id: Date
  parent: CalendarBack.Database.Entities.Shedule
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: Shedule.Date
  fullName: CalendarBack.Database.Entities.Shedule.Date
  type: Property
  source:
    remote:
      path: CalendarBack/Database/Entities/Shedule.cs
      branch: master
      repo: https://github.com/solko12/Calendar
    id: Date
    path: Database/Entities/Shedule.cs
    startLine: 19
  assemblies:
  - CalendarBack
  namespace: CalendarBack.Database.Entities
  summary: "\nDate is date for which data is storage\n"
  example: []
  syntax:
    content: public DateTime Date { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property Date As Date
  overload: CalendarBack.Database.Entities.Shedule.Date*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CalendarBack.Database.Entities.Shedule.TasksList
  commentId: P:CalendarBack.Database.Entities.Shedule.TasksList
  id: TasksList
  parent: CalendarBack.Database.Entities.Shedule
  langs:
  - csharp
  - vb
  name: TasksList
  nameWithType: Shedule.TasksList
  fullName: CalendarBack.Database.Entities.Shedule.TasksList
  type: Property
  source:
    remote:
      path: CalendarBack/Database/Entities/Shedule.cs
      branch: master
      repo: https://github.com/solko12/Calendar
    id: TasksList
    path: Database/Entities/Shedule.cs
    startLine: 23
  assemblies:
  - CalendarBack
  namespace: CalendarBack.Database.Entities
  summary: "\nTaskList is list of task for that day\n"
  example: []
  syntax:
    content: public List<Task> TasksList { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{CalendarBack.Database.Entities.Task}
    content.vb: Public Property TasksList As List(Of Task)
  overload: CalendarBack.Database.Entities.Shedule.TasksList*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CalendarBack.Database.Entities
  commentId: N:CalendarBack.Database.Entities
  name: CalendarBack.Database.Entities
  nameWithType: CalendarBack.Database.Entities
  fullName: CalendarBack.Database.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CalendarBack.Database.Entities.Shedule.Id*
  commentId: Overload:CalendarBack.Database.Entities.Shedule.Id
  name: Id
  nameWithType: Shedule.Id
  fullName: CalendarBack.Database.Entities.Shedule.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CalendarBack.Database.Entities.Shedule.Date*
  commentId: Overload:CalendarBack.Database.Entities.Shedule.Date
  name: Date
  nameWithType: Shedule.Date
  fullName: CalendarBack.Database.Entities.Shedule.Date
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: CalendarBack.Database.Entities.Shedule.TasksList*
  commentId: Overload:CalendarBack.Database.Entities.Shedule.TasksList
  name: TasksList
  nameWithType: Shedule.TasksList
  fullName: CalendarBack.Database.Entities.Shedule.TasksList
- uid: System.Collections.Generic.List{CalendarBack.Database.Entities.Task}
  commentId: T:System.Collections.Generic.List{CalendarBack.Database.Entities.Task}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Task>
  nameWithType: List<Task>
  fullName: System.Collections.Generic.List<CalendarBack.Database.Entities.Task>
  nameWithType.vb: List(Of Task)
  fullName.vb: System.Collections.Generic.List(Of CalendarBack.Database.Entities.Task)
  name.vb: List(Of Task)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CalendarBack.Database.Entities.Task
    name: Task
    nameWithType: Task
    fullName: CalendarBack.Database.Entities.Task
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CalendarBack.Database.Entities.Task
    name: Task
    nameWithType: Task
    fullName: CalendarBack.Database.Entities.Task
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
